"""
Rehabit Backend API
Integrates ML models for productivity insights
"""
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from app.database import init_db
from app.routers.dashboard import router as dashboard_router

# Create FastAPI app
app = FastAPI(
    title="Rehabit API",
    description="AI-powered productivity tracking and insights",
    version="1.0.0"
)

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include routers
app.include_router(dashboard_router)

# Initialize database on startup
@app.on_event("startup")
def startup_event():
    init_db()
    print("ðŸš€ Rehabit API started successfully")

@app.get("/")
def root():
    """Root endpoint"""
    return {
        "message": "Welcome to Rehabit API",
        "version": "1.0.0",
        "status": "running",
        "endpoints": {
            "dashboard": "/api/dashboard/{user_id}",
            "dashboard_test": "/api/dashboard/test",
            "health": "/health",
            "docs": "/docs"
        }
    }

@app.get("/health")
def health():
    """Health check endpoint"""
    return {
        "status": "healthy",
        "database": "connected",
        "ml_models": "loaded"
    }


